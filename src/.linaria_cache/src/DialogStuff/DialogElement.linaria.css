.n1ytk0vr{-webkit-animation-name:drift-n1ytk0vr,fade-in-n1ytk0vr;animation-name:drift-n1ytk0vr,fade-in-n1ytk0vr;-webkit-animation-duration:5s,200ms;animation-duration:5s,200ms;-webkit-animation-iteration-count:infinite,1;animation-iteration-count:infinite,1;-webkit-animation-timing-function:linear;animation-timing-function:linear;display:block;height:48px;border-radius:5px;border:2px solid #e5e5e5;background-image:url(../../../DialogStuff/images/nexters.svg);background-color:white;width:100%;background-size:111px 73px;font-size:1em;font-family:"Menlo",monospace;margin-top:16px;box-shadow:2px 2px 7px rgba(0,0,0,0.05);-webkit-transition:-webkit-transform 200ms;-webkit-transition:transform 200ms;transition:transform 200ms;-webkit-appearance:none;-moz-appearance:none;appearance:none;}@-webkit-keyframes drift-n1ytk0vr{100%{background-position:111px 73px;}}@keyframes drift-n1ytk0vr{100%{background-position:111px 73px;}}@-webkit-keyframes fade-in-n1ytk0vr{from{opacity:0;}to{opacity:1;}}@keyframes fade-in-n1ytk0vr{from{opacity:0;}to{opacity:1;}}.n1ytk0vr:hover{-webkit-transform:scale(1.02);-ms-transform:scale(1.02);transform:scale(1.02);}.n1ytk0vr:active{-webkit-transform:scale(0.98);-ms-transform:scale(0.98);transform:scale(0.98);}.n1ytk0vr:focus{color:#47bc76;border-color:#47bc76;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9EaWFsb2dTdHVmZi9EaWFsb2dFbGVtZW50LnRzeCJdLCJuYW1lcyI6WyIubjF5dGswdnIiXSwibWFwcGluZ3MiOiJBQWlDTUEiLCJmaWxlIjoic3JjL0RpYWxvZ1N0dWZmL0RpYWxvZ0VsZW1lbnQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBUZXh0UGFuZWwgZnJvbSBcIi4vVGV4dFBhbmVsXCI7XG5pbXBvcnQgeyBEaWFsb2dDb250ZXh0LCBEaWFsb2dDaGlsZENvbnRleHQgfSBmcm9tIFwiLi9EaWFsb2dcIjtcbmltcG9ydCB1c2VLZXkgZnJvbSBcIkByb29rcy91c2Uta2V5XCI7XG5pbXBvcnQgeyB1c2VJc0ZpbmlzaGVkLCB1c2VTa2lwLCBFZmZlY3QgfSBmcm9tIFwid2luZHVwc1wiO1xuaW1wb3J0IHsgU2VjdGlvbkNvbnRleHQgfSBmcm9tIFwiLi9TZWN0aW9uXCI7XG5pbXBvcnQgU2VjdGlvbkZvY3VzQ29udGV4dCBmcm9tIFwiLi9TZWN0aW9uRm9jdXNDb250ZXh0XCI7XG5pbXBvcnQgeyBjc3MgfSBmcm9tIFwibGluYXJpYVwiO1xuaW1wb3J0IE5leHRlcnMgZnJvbSBcIi4vaW1hZ2VzL25leHRlcnMuc3ZnXCI7XG5pbXBvcnQgeyBHUkVFTiB9IGZyb20gXCIuL2NvbG91cnNcIjtcblxuZXhwb3J0IGNvbnN0IE5leHRMaXN0ZW5lcjogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IGlzRmluaXNoZWQgPSB1c2VJc0ZpbmlzaGVkKCk7XG4gIGNvbnN0IHNraXAgPSB1c2VTa2lwKCk7XG4gIGNvbnN0IHsgaXNGaW5pc2hlZDogZGlhbG9nSXNGaW5pc2hlZCB9ID0gdXNlQ29udGV4dChEaWFsb2dDb250ZXh0KTtcbiAgY29uc3QgeyBwcm9jZWVkLCBpc0FjdGl2ZSB9ID0gdXNlQ29udGV4dChEaWFsb2dDaGlsZENvbnRleHQpO1xuICBjb25zdCB7IGFjdGl2ZVNlY3Rpb25JRCB9ID0gdXNlQ29udGV4dChTZWN0aW9uRm9jdXNDb250ZXh0KTtcbiAgY29uc3QgeyBpZCB9ID0gdXNlQ29udGV4dChTZWN0aW9uQ29udGV4dCk7XG4gIGNvbnN0IGlzVG90YWxseUFjdGl2ZSA9IGlzQWN0aXZlICYmIGFjdGl2ZVNlY3Rpb25JRCA9PT0gaWQ7XG5cbiAgdXNlS2V5KFsxMywgMzldLCAoKSA9PiB7XG4gICAgaWYgKGlzVG90YWxseUFjdGl2ZSAmJiAhaXNGaW5pc2hlZCkge1xuICAgICAgc2tpcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaXNUb3RhbGx5QWN0aXZlICYmICFkaWFsb2dJc0ZpbmlzaGVkKSB7XG4gICAgICAgIHByb2NlZWQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBudWxsO1xufTtcblxuY29uc3QgbmV4dFJvb3RTdHlsZXMgPSBjc3NgXG4gIEBrZXlmcmFtZXMgZHJpZnQge1xuICAgIDEwMCUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTExcHggNzNweDtcbiAgICB9XG4gIH1cbiAgQGtleWZyYW1lcyBmYWRlLWluIHtcbiAgICBmcm9tIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICB9XG4gIGFuaW1hdGlvbi1uYW1lOiBkcmlmdCwgZmFkZS1pbjtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiA1cywgMjAwbXM7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlLCAxO1xuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDQ4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2U1ZTVlNTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7TmV4dGVyc30pO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMTExcHggNzNweDtcbiAgZm9udC1zaXplOiAxZW07XG4gIGZvbnQtZmFtaWx5OiBcIk1lbmxvXCIsIG1vbm9zcGFjZTtcbiAgbWFyZ2luLXRvcDogMTZweDtcbiAgYm94LXNoYWRvdzogMnB4IDJweCA3cHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDIwMG1zO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICAmOmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDIpO1xuICB9XG4gICY6YWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTgpO1xuICB9XG4gICY6Zm9jdXMge1xuICAgIGNvbG9yOiAke0dSRUVOfTtcbiAgICBib3JkZXItY29sb3I6ICR7R1JFRU59O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgTmV4dEJ1dHRvbjogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgc2V0QWN0aXZlU2VjdGlvbklEIH0gPSB1c2VDb250ZXh0KFNlY3Rpb25Gb2N1c0NvbnRleHQpO1xuICBjb25zdCB7IGlkIH0gPSB1c2VDb250ZXh0KFNlY3Rpb25Db250ZXh0KTtcbiAgY29uc3QgeyBpc0ZpbmlzaGVkOiBkaWFsb2dJc0ZpbmlzaGVkIH0gPSB1c2VDb250ZXh0KERpYWxvZ0NvbnRleHQpO1xuICBjb25zdCB7IHByb2NlZWQsIGlzQWN0aXZlIH0gPSB1c2VDb250ZXh0KERpYWxvZ0NoaWxkQ29udGV4dCk7XG5cbiAgcmV0dXJuICFkaWFsb2dJc0ZpbmlzaGVkICYmIGlzQWN0aXZlID8gKFxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzTmFtZT17bmV4dFJvb3RTdHlsZXN9XG4gICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgIHNldEFjdGl2ZVNlY3Rpb25JRChpZCk7XG4gICAgICAgIHByb2NlZWQoKTtcbiAgICAgIH19XG4gICAgICB0YWJJbmRleD17MH1cbiAgICA+XG4gICAgICB7XCJDb250aW51ZVwifVxuICAgIDwvYnV0dG9uPlxuICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCB0eXBlIERpYWxvZ0VsZW1lbnRQcm9wcyA9IHtcbiAgYXV0b1Byb2NlZWQ/OiBib29sZWFuO1xufTtcblxuY29uc3QgRGlhbG9nRWxlbWVudDogUmVhY3QuRkM8RGlhbG9nRWxlbWVudFByb3BzPiA9ICh7XG4gIGNoaWxkcmVuLFxuICBhdXRvUHJvY2VlZFxufSkgPT4ge1xuICBjb25zdCB7IHByb2NlZWQgfSA9IHVzZUNvbnRleHQoRGlhbG9nQ2hpbGRDb250ZXh0KTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8VGV4dFBhbmVsPlxuICAgICAgICA8TmV4dExpc3RlbmVyIC8+XG4gICAgICAgIDxkaXYgYXJpYS1oaWRkZW4+e2NoaWxkcmVufTwvZGl2PlxuICAgICAgICB7YXV0b1Byb2NlZWQgPyA8RWZmZWN0IGZuPXtwcm9jZWVkfSAvPiA6IDxOZXh0QnV0dG9uIC8+fVxuICAgICAgPC9UZXh0UGFuZWw+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBEaWFsb2dFbGVtZW50O1xuIl19*/